#
# System-dependent Make definitions for Linux, (old) Absoft compiler
# Edit according to your needs
#
# Precompiler
# we assume that the GNU precompiler is used. The option -traditional
# prevent string concatenation '//' from being interpreted as a comment
#
CPP = /lib/cpp -P -traditional
#
# Add -DADD_BLAS_ONE_UNDERSCORE or -DADD_BLAS_TWO_UNDERSCORES to
# CPPFLAGS if your blas/lapack library names contain respectively
# one or two underscores at the end

# Use precompiled fftw library (version <= 2.1.5, NOT v.3!)
#
# In this case, specify also  how to load the fftw library (FFTW_LIB)
# and the path to the fftw.h include file (FFTW_INC_DIR). Example:
# FFTW_LIB=-L/usr/local/src/fftw-2.1.3/fftw/.libs -lfftw
# FFTW_INC_DIR=/usr/local/src/fftw-2.1.3/fftw
# CPPFLAGS = -D__LINUX -D__ABSOFT -D__FFTW -I$(OSHOME)/include \
#  -I$(FFTW_INC_DIR)

# Use the local copy of fftw

CPPFLAGS = -D__LINUX -D__ABSOFT -D__FFTW -D__USE_INTERNAL_FFTW \
  -I$(OSHOME)/include -I./

#
# Fortran compiler
#
F90 = /usr/absoft/bin/f90
F77 = /usr/absoft/bin/f77
#
# Fortran compiler flags
#                  -s    for static allocation
#                        (otherwise everything is allocated on the stack)
#                  -YEXT_NAMES= LCS folds external symbols to lowercase
#                        (Absoft is case-sensitive) - f90 only
#                  -f    same as above - f77 only
#                  -O    for optimization
#                  -B100 for Pentium II optimization
#                  -B101 for Pentium    optimization
#                  -N113 Promote REAL and COMPLEX data types to DOUBLE-f77 only
#
#
# Fortran90 compiler flags
#
F90FLAGS =-s -O -B100 -YEXT_NAMES=LCS
#
# Fortran77 compiler flags
#
F77FLAGS =-s -N113 -O -B100 -f
F77FLAGS_NOOPT = -f
#
# C compiler flags (for GNU C compiler)
#
CCFLAGS  = $(CPPFLAGS) -O3 -fomit-frame-pointer
#
# This is needed to tell the compiler where modules are
#
MODULEFLAG= -p$(OSHOME)/Modules -p$(OSHOME)/PW -p$(OSHOME)/PH
#
# Loader:
#
# for precompiled blas/lapack, use the following
# (some precompiled blas/lapack libraries may need -lg2c)
#
LIBS= -llapack -lblas lU77 -lm $(FFTW_LIB)
#
# The following is to use blas and lapack from the source code
# LIBS= -lU77 -lm
# MYLIB=blas_and_lapack
#
LD=$(F90)
LDFLAGS = $(OSHOME)/flib/ptools.a $(OSHOME)/flib/flib.a $(OSHOME)/clib/clib.a $(LIBS)

#
# ar:
#
AR = ar
ARFLAGS = ruv
