#
# System-dependent Make definitions for Linux, Absoft compiler
# Edit according to your needs
#
# Precompiler
#
CPP = /lib/cpp
#
# we use the GNU precompiler, which can handle the fortran
# string concatenation '//' as not being a comment (-traditional)
#
# Add -DADD_BLAS_ONE_UNDERSCORE or -DADD_BLAS_TWO_UNDERSCORES if your blas/lapack
# library names contain respectively one or two underscores at the end
# Define FFTW library names exactly as they appear in the library
#
CPPFLAGS = -P -traditional -I$(OSHOME)/include -DPC -DABSOFT -D__FFTW \
           -DADD_BLAS_ONE_UNDERSCORE \
           -D"FFTWND_F77_ONE=fftwnd_f77_one" \
           -D"FFTW3D_F77_CREATE_PLAN=fftw3d_f77_create_plan"

#
# Fortran compiler:
#
#F90 = /usr/absoft/bin/f90
F90 = f90
F77 = f90
#
# fortran options: -s    for static allocation
#                        (otherwise everything is allocated on the stack)
#                  -YEXT_NAMES= LCS folds external symbols to lowercase
#                        (Absoft is case-sensitive)
#                  -O    for optimization
#                  -B100 for Pentium II optimization
#                  -B101 for Pentium    optimization
#                  -N113 Promote REAL and COMPLEX data types to DOUBLE
#
F90FLAGS =-s -N113 -O -B100 -YEXT_NAMES=LCS
F77FLAGS =-s -N113 -O -B100 -YEXT_NAMES=LCS
#
# This is needed to tell the compiler where modules are
#
MODULEFLAG= -p$(OSHOME)/Modules -p$(OSHOME)/PW -p$(OSHOME)/PH

#
# Loader:
#
# some precompiled blas/lapack libraries may need -lg2c
#
LD=$(F90)
LIBS = -llapack -lblas -lfftw -lU77 -lm
#
LDFLAGS = $(OSHOME)/flib/flib.a $(LIBS)


#
# ar:
#
AR = ar
ARFLAGS = ruv
#
# ranlib:
#
RANLIB=echo

