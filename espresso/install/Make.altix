#
# System-dependent definitions for SGI Altix 350/3000 machines running Linux 
# (parallel, MPI)
# Contributed by by Martin Hilgeman <hilgeman@sgi.com>
# Red Hat Linux Advanced Server release 2.1AS (Derry), 
# SGI ProPack 2.4 for Linux, Build 240rp04021313_10046-040213135,
# SCSL >= 1.4.1, MPT >= 1.8.1, Intel 7.1 Fortran 95 and C++ compiler
#
# Edit according to your needs

# Use the SGI SCSL scientific library (recommended)
#
CPPFLAGS = -D__SCSL -D__ALTIX -D__LINUX64 -D__MPI -D__PARA \
 -I$(OSHOME)/include -I./

# Use precompiled fftw library (version <= 2.1.5, NOT v.3!)
#
# In this case, specify also how to load the fftw library (FFTW_LIB)
# and the path to the fftw.h include file (FFTW_INC_DIR). Example:
# FFTW_LIB=-L/usr/local/src/fftw-2.1.3/fftw/.libs -lfftw64
# FFTW_INC_DIR=/usr/local/src/fftw-2.1.3/fftw
# CPPFLAGS = -D__FFTW -D__ALTIX -D__MPI -D__PARA -I$(OSHOME)/include \
#  -I$(FFTW_INC_DIR)

# Use the local copy of fftw
#
# CPPFLAGS = -D__ALTIX -D__LINUX64 -D__MPI -D__PARA -D__FFTW \
#  -D__USE_INTERNAL_FFTW -I$(OSHOME)/include -I./

# Serial version
#
# CPPFLAGS = -D__SCSL -D__ALTIX -D__LINUX64 -I$(OSHOME)/include -I./

#
# Fortran compiler:
#
# Use the Intel 7.1 Fortran compiler
#
F90 = efc
F77 = efc
#
# Fortran compiler flags
#
# -Vaxlib         enables the use of portability libraries (getarg           
#                 and maybe other library calls)              
# -W0             disable warnings                            
# -O3             more aggressive optimization
# -tpp2           Itanium2 family optimization
# -cm             suppress all comment messages
# -w              disable all warnings
# -w95            surpress messages about non-standard Fortran
# -lowercase      change routine names to all lowercase
# -ftz            flush denormal results to zero
# -ip             enable single-file IP optimizations (within files)
# -fno-alias      assume no aliasing
# -fno-fnalias    assume no aliasing within functions, but do across calls
#
FFLAGS     = -FR -cm -w -w95 -r8 -ftz -ip -tpp2 -lowercase
OFLAGS     = -O3 -fno-alias -fno-fnalias
F77FLAGS   = $(FFLAGS) $(OFLAGS)
F90FLAGS   = $(FFLAGS) $(OFLAGS) -fpp $(CPPFLAGS)
#
# This is needed to tell the compiler where modules are
#
MODULEFLAG = -I$(OSHOME)/Modules -I$(OSHOME)/PW -I$(OSHOME)/PH
#
# C compiler
#
# Use the Intel 7.1 C/C++ compiler
#
CC = ecc
#
# Flags for the C compiler
#
CCFLAGS    = -ip -tpp2 $(CPPFLAGS) $(OFLAGS)
#
# Libraries:
#
# Use the SGI SCSL scientific library (recommended)
#
LIBS = -lmpi -lscs
#
# Use the Intel MKL libraries
#
# LIBS = -lmpi $(FFTW_LIB) -L/opt/intel/mkl60/lib/64 -lmkl_lapack64 \
#  -lmkl_itp -lguide -lpthread
#
# Loader:
#
LD=$(F90)

LDFLAGS = $(FFLAGS) $(OSHOME)/flib/ptools.a $(OSHOME)/flib/flib.a \
 $(OSHOME)/clib/clib.a $(LIBS) -Vaxlib

#
# ar:
#
AR = ar
ARFLAGS = ruv
RANLIB         = echo
