# System-dependent definitions for SGI workstations
# Edit according to your needs

.SUFFIXES :
.SUFFIXES : .o .c .f .f90

.f90.o:
	$(F90) $(F90FLAGS) -c $<

.f.o:
	$(F77) $(FFLAGS) -c $<

.c.o:
	$(CC) $(CFLAGS) -c $<

# Add -D__SGI64 to compile with 64 bits (if available)

## Use fft routines from complib library:
# CPPFLAGS     = -D__SGI -I../include

## Use precompiled fftw library (version <= 2.1.5, NOT v.3!)
## In this case, specify also how to load the fftw library (FFTW_LIB)
## and the path to the fftw.h include file (FFTW_INC_DIR). Example:
# FFTW_LIB     = -L/usr/local/src/fftw-2.1.3/fftw/.libs -lfftw
# FFTW_INC_DIR = /usr/local/src/fftw-2.1.3/fftw
# CPPFLAGS     = -D__FFTW -D__SGI I../include -I$(FFTW_INC_DIR)

# Use the local copy of fftw
CPPFLAGS     = -D__FFTW -D__SGI -D__USE_INTERNAL_FFTW -I../include -I.

F90          = f90
F77          = f90
CC           = cc

# use -O3 only if you are sure that it actually works 
# use -64 if compiling with 64 bits
FFLAGS       = -mips4 -O2 -r10000 -r8
F90FLAGS     = $(FFLAGS) -cpp $(CPPFLAGS) -I../Modules -I../PW -I../PH
CFLAGS       =  -mips4 -O2 -r10000 $(CPPFLAGS) 

LIBS         = -lmpi -lcomplib.sgimath $(FFTW_LIB)

LD           = $(F90)
LDFLAGS      = $(FFLAGS) ../flib/ptools.a ../flib/flib.a ../clib/clib.a $(LIBS)
AR           = ar
ARFLAGS      = ruv
RANLIB       = echo
