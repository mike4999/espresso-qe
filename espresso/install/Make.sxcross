#
# System-dependent definitions for NEC SX6 - Contributed by Guido Roma
# Edit according to your needs
#
# Precompiler:
#
MAKE=sxmake
CPP = /SX/usr/lib/sxcpp
INC_DIR = ../include

# For fft routines of ASL library
CPPFLAGS = -P -E -DASL -DHAS_ZHEGVX -DLANGUAGE_FORTRAN -D__SX6 -I$(INC_DIR)
# For libfft library, part of Mathkeisan Libraries 
#CPPFLAGS = -P -E -DLANGUAGE_FORTRAN -DHAS_ZHEGVX -D__SX6 -I$(INC_DIR) 
# For libjmfft library (www.idris.fr) by Jean-Marie Teuler
#CPPFLAGS = -P -E -DZZFFT3D=ccfft3d -DHAS_ZHEGVX -DLANGUAGE_FORTRAN -D__SX6 -I$(INC_DIR)

HOST=-sx6
BASIC=-float0 -P stack $(HOST)
MISC = -I$(INC_DIR) -eab -R5 -Wf" -P nh -ptr byte" -Wf,"-Ncont -A dbl4"
MISC1 = -I$(INC_DIR) -eab -R5 -Wf" -P nh -ptr byte" -Wf,"-cont -A dbl4"
PROF=-p
FTRACE=-ftrace
OPT= -C hopt -Wf" -pvctl noifopt loopcnt=9999999 expand=12 fullmsg vwork=stack -fusion -O noif"
OPTVSAFE= -C vsafe -Wf" -pvctl loopcnt=9999999 fullmsg vwork=stack "
OPT0= -C debug 
DEBUG= -g 
DEBUGOPT= -Wf" -init stack=zero heap=zero"

#

AR = sxar
ARFLAGS = rv

#
# Fortran compiler:
#
#
F90 = sxf90
F77 = sxf90

FFLAGS = $(BASIC) $(MISC) $(OPT) $(DEBUGOPT)
#$(FTRACE)
#FFLAGS = $(BASIC) $(MISC) $(DEBUG) $(DEBUGOPT) $(OPT0) 
#FCAUTIOUS=$(BASIC) $(MISC1) $(DEBUG) $(DEBUGOPT)
F90FLAGS=$(FFLAGS) -I../Modules -I../PW -I../PH
F77FLAGS=-f3 $(FFLAGS)

#
# C compiler:
#
#CC = sxc++
#CFLAGS = -DLANGUAGE_C -DNEC -DSX -I$(INC_DIR) -hfloat0,0,acct
CC = sxcc
CCLOCAL=cc
CFLAGS = -D__SX6 -I$(INC_DIR)  

#
# Libraries:
#
# With ASL fft libraries
LIBS = -llapack -lblas -lasl
# With libfft (Mathkeisan) libraries
# be careful, versions <= 1.4 are buggy (zzfft3d), 
#wait for 1.5 (expected end of 2003) 
#LIBS = -llapack -lblas ../zzfft3d.o -lfft
# You can find the jmfft Cray compatible library written
# by Jean-Marie Teuler on www.idris.fr (search for jmfft)
#LIBS = -llapack -lblas -L$(HOME)/mylocal/lib -ljmfft

#
# Loader flags:
#
LD = $(F90)
#LDFLAGS =  $(BASIC) $(PROF) $(FTRACE) 
LDFLAGS = $(BASIC) $(DEBUG) $(DEBUGOPT) ../flib/ptools.a \
          ../flib/flib.a ../clib/clib.a \
          -p -Wl" -f zero " $(LIBS)
RANLIB         = echo
