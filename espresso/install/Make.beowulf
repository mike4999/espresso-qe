# System-dependent Make definitions for Linux PC cluster, pgi compiler
# Edit according to your needs

.SUFFIXES :
.SUFFIXES : .o .c .f .f90

.f90.o:
	$(CPP) $(CPPFLAGS) $*.f90 $*.F90
	$(F90) $(F90FLAGS) -c $*.F90 -o $*.o

.f.o:
	$(F77) $(FFLAGS) -c $<

.c.o:
	$(CC) $(CFLAGS) -c $<

# Precompiler:
# we assume that the GNU precompiler is used. The option -traditional
# prevent string concatenation '//' from being interpreted as a comment
CPP          = /lib/cpp -P -traditional

# Add -DADD_BLAS_ONE_UNDERSCORE if your blas/lapack library names contain 
# two underscores at the end

# Add -D__LAM if using the LAM version of MPI

## Use precompiled fftw library (version <= 2.1.5, NOT v.3!)
## In this case, specify also  how to load the fftw library (FFTW_LIB)
## and the path to the fftw.h include file (FFTW_INC_DIR). Example:
# FFTW_LIB     = -L/usr/local/src/fftw-2.1.3/fftw/.libs -lfftw
# FFTW_INC_DIR = /usr/local/src/fftw-2.1.3/fftw
# CPPFLAGS     = -D__LINUX -D__PGI -D__PARA -D__MPI -D__FFTW -I../include \
#                -I$(FFTW_INC_DIR)

# Use the local copy of fftw
CPPFLAGS     = -D__LINUX -D__PGI -D__PARA -D__MPI -D__FFTW \
               -D__USE_INTERNAL_FFTW -I../include -I.

F90          = mpif90
F77          = mpif77
CC           = mpicc

# Please note: -r8 is necessary for numerical stability ..
FFLAGS       = -fast -r8
F90FLAGS     = -fast -r8 -I../Modules -I../PW -I../PH
CFLAGS       = -fast $(CPPFLAGS)

# use precompiled pgi libraries ( not very efficient but stable )
LIBS         = -L/usr/local/pgi/linux86/lib/ -llapack -lblas $(FFTW_LIB)

LD           = $(F90)
LDFLAGS      = ../flib/ptools.a ../flib/flib.a ../clib/clib.a $(LIBS) \
               -I../Modules -I../PW -I../PH
AR           = ar
ARFLAGS      = ruv
RANLIB       = echo
