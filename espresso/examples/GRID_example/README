This example shows how to use ph.x on a GRID. The calculation is the
same as example06 but all q-vectors and all irreps are split into
different runs.

The calculation proceeds as follows:

1) A self consistent calculation is done:
(input alas.scf.in, output alas.scf.out)

2) A preparatory phonon run with start_irr=0, last_irr=0 calculates the
displacement patterns:
(input alas.ph.in0, output alas.ph.out0)

3) ph.x is run for each representation of each q point. 
The code runs with different outdir and only the xml files are copied 
in the same outdir
(input input.#q.#irr, output output.#q.#irr)

4) A final phonon calculation collects all the dynamical matrices
 (input alas.ph.in, output alas.ph.out)

Note: the last step is not needed if only q-vectors are distributed 
over different runs, i.e. if each run calculates all irreps of a single
q-vector (or a group of q-vectors)
