
     Program RAMAN     v.2.1    starts ...
     Today is 26Aug2004 at 20:10: 6 


     **********************************************
     *  Calculation of the Raman tensor by using  *
     *             the 2n+1 theorem               *
     **********************************************

     Reading file alas.save ... 
     read complete

     Reading file alas.save ... 
     read complete

     nbndx  =     4  nbnd   =     4  natomwfc =    13  npwx   =     165
     nelec  =    8.00 nkb   =     8  ngl    =      39
 WRITING PATTERNS ON FILE alas.drho.pat                                         
                                                                                
                                                                                
                                             

     phonons of AlAs at Gamma                                                   

     crystal is                     

     bravais-lattice index     =            2
     lattice parameter (a_0)   =      10.5750  a.u.
     unit-cell volume          =     295.6522 (a.u.)^3
     number of atoms/cell      =            2
     number of atomic types    =            2
     kinetic-energy cut-off    =      10.0000  Ry
     charge density cut-off    =      40.0000  Ry
     convergence threshold     =      1.0E-12
     beta                      =       0.7000
     number of iterations used =            4

     celldm(1)=   10.57500  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of a_0)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/a_0)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

   Cartesian axes

     site n.  atom      mass           positions (a_0 units)
        1        Al  69.7200   tau( 1) = (    0.00000    0.00000    0.00000  )
        2        As  26.9800   tau( 2) = (    0.25000    0.25000    0.25000  )

     Computing dynamical matrix for 
                    q = (    0.00000    0.00000    0.00000 )
 
     25 Sym.Ops. (with q -> -q+G )


     G cutoff =  113.3081  (   1243 G-vectors)     FFT grid: ( 16, 16, 16)
     number of k points=   70
                       cart. coord. in units 2pi/a_0
        k(    1) = (  -0.1250000   0.1250000   0.1250000), wk =   0.0625000
        k(    2) = (  -0.1240000   0.1250000   0.1250000), wk =   0.0000000
        k(    3) = (  -0.1250000   0.1260000   0.1250000), wk =   0.0000000
        k(    4) = (  -0.1250000   0.1250000   0.1260000), wk =   0.0000000
        k(    5) = (  -0.1260000   0.1250000   0.1250000), wk =   0.0000000
        k(    6) = (  -0.1250000   0.1240000   0.1250000), wk =   0.0000000
        k(    7) = (  -0.1250000   0.1250000   0.1240000), wk =   0.0000000
        k(    8) = (  -0.3750000   0.3750000  -0.1250000), wk =   0.1875000
        k(    9) = (  -0.3740000   0.3750000  -0.1250000), wk =   0.0000000
        k(   10) = (  -0.3750000   0.3760000  -0.1250000), wk =   0.0000000
        k(   11) = (  -0.3750000   0.3750000  -0.1240000), wk =   0.0000000
        k(   12) = (  -0.3760000   0.3750000  -0.1250000), wk =   0.0000000
        k(   13) = (  -0.3750000   0.3740000  -0.1250000), wk =   0.0000000
        k(   14) = (  -0.3750000   0.3750000  -0.1260000), wk =   0.0000000
        k(   15) = (   0.3750000  -0.3750000   0.6250000), wk =   0.1875000
        k(   16) = (   0.3760000  -0.3750000   0.6250000), wk =   0.0000000
        k(   17) = (   0.3750000  -0.3740000   0.6250000), wk =   0.0000000
        k(   18) = (   0.3750000  -0.3750000   0.6260000), wk =   0.0000000
        k(   19) = (   0.3740000  -0.3750000   0.6250000), wk =   0.0000000
        k(   20) = (   0.3750000  -0.3760000   0.6250000), wk =   0.0000000
        k(   21) = (   0.3750000  -0.3750000   0.6240000), wk =   0.0000000
        k(   22) = (   0.1250000  -0.1250000   0.3750000), wk =   0.1875000
        k(   23) = (   0.1260000  -0.1250000   0.3750000), wk =   0.0000000
        k(   24) = (   0.1250000  -0.1240000   0.3750000), wk =   0.0000000
        k(   25) = (   0.1250000  -0.1250000   0.3760000), wk =   0.0000000
        k(   26) = (   0.1240000  -0.1250000   0.3750000), wk =   0.0000000
        k(   27) = (   0.1250000  -0.1260000   0.3750000), wk =   0.0000000
        k(   28) = (   0.1250000  -0.1250000   0.3740000), wk =   0.0000000
        k(   29) = (  -0.1250000   0.6250000   0.1250000), wk =   0.1875000
        k(   30) = (  -0.1240000   0.6250000   0.1250000), wk =   0.0000000
        k(   31) = (  -0.1250000   0.6260000   0.1250000), wk =   0.0000000
        k(   32) = (  -0.1250000   0.6250000   0.1260000), wk =   0.0000000
        k(   33) = (  -0.1260000   0.6250000   0.1250000), wk =   0.0000000
        k(   34) = (  -0.1250000   0.6240000   0.1250000), wk =   0.0000000
        k(   35) = (  -0.1250000   0.6250000   0.1240000), wk =   0.0000000
        k(   36) = (   0.6250000  -0.1250000   0.8750000), wk =   0.3750000
        k(   37) = (   0.6260000  -0.1250000   0.8750000), wk =   0.0000000
        k(   38) = (   0.6250000  -0.1240000   0.8750000), wk =   0.0000000
        k(   39) = (   0.6250000  -0.1250000   0.8760000), wk =   0.0000000
        k(   40) = (   0.6240000  -0.1250000   0.8750000), wk =   0.0000000
        k(   41) = (   0.6250000  -0.1260000   0.8750000), wk =   0.0000000
        k(   42) = (   0.6250000  -0.1250000   0.8740000), wk =   0.0000000
        k(   43) = (   0.3750000   0.1250000   0.6250000), wk =   0.3750000
        k(   44) = (   0.3760000   0.1250000   0.6250000), wk =   0.0000000
        k(   45) = (   0.3750000   0.1260000   0.6250000), wk =   0.0000000
        k(   46) = (   0.3750000   0.1250000   0.6260000), wk =   0.0000000
        k(   47) = (   0.3740000   0.1250000   0.6250000), wk =   0.0000000
        k(   48) = (   0.3750000   0.1240000   0.6250000), wk =   0.0000000
        k(   49) = (   0.3750000   0.1250000   0.6240000), wk =   0.0000000
        k(   50) = (  -0.1250000  -0.8750000   0.1250000), wk =   0.1875000
        k(   51) = (  -0.1240000  -0.8750000   0.1250000), wk =   0.0000000
        k(   52) = (  -0.1250000  -0.8740000   0.1250000), wk =   0.0000000
        k(   53) = (  -0.1250000  -0.8750000   0.1260000), wk =   0.0000000
        k(   54) = (  -0.1260000  -0.8750000   0.1250000), wk =   0.0000000
        k(   55) = (  -0.1250000  -0.8760000   0.1250000), wk =   0.0000000
        k(   56) = (  -0.1250000  -0.8750000   0.1240000), wk =   0.0000000
        k(   57) = (  -0.3750000   0.3750000   0.3750000), wk =   0.0625000
        k(   58) = (  -0.3740000   0.3750000   0.3750000), wk =   0.0000000
        k(   59) = (  -0.3750000   0.3760000   0.3750000), wk =   0.0000000
        k(   60) = (  -0.3750000   0.3750000   0.3760000), wk =   0.0000000
        k(   61) = (  -0.3760000   0.3750000   0.3750000), wk =   0.0000000
        k(   62) = (  -0.3750000   0.3740000   0.3750000), wk =   0.0000000
        k(   63) = (  -0.3750000   0.3750000   0.3740000), wk =   0.0000000
        k(   64) = (   0.3750000  -0.3750000   1.1250000), wk =   0.1875000
        k(   65) = (   0.3760000  -0.3750000   1.1250000), wk =   0.0000000
        k(   66) = (   0.3750000  -0.3740000   1.1250000), wk =   0.0000000
        k(   67) = (   0.3750000  -0.3750000   1.1260000), wk =   0.0000000
        k(   68) = (   0.3740000  -0.3750000   1.1250000), wk =   0.0000000
        k(   69) = (   0.3750000  -0.3760000   1.1250000), wk =   0.0000000
        k(   70) = (   0.3750000  -0.3750000   1.1240000), wk =   0.0000000

     pseudo 1 is Al         zval =  3.0   lmax= 1   lloc= 0
     (in numerical form: 171 grid points, xmin =  0.00, dx = 0.0000)

     pseudo 2 is As         zval =  5.0   lmax= 1   lloc= 0
     (in numerical form: 525 grid points, xmin =  0.00, dx = 0.0000)


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      3 modes - To be done

     Representation     2      3 modes - To be done


The vectors for the finite differences are:
in cartesian axes:
       0.0010000  0.0000000  0.0000000     500000.000
       0.0000000  0.0010000  0.0000000     500000.000
       0.0000000  0.0000000  0.0010000     500000.000
      -0.0010000  0.0000000  0.0000000     500000.000
       0.0000000 -0.0010000  0.0000000     500000.000
       0.0000000  0.0000000 -0.0010000     500000.000
in crystal axes:
      -0.0005000  0.0000000 -0.0005000     500000.000
       0.0000000  0.0005000  0.0005000     500000.000
       0.0005000  0.0005000  0.0000000     500000.000
       0.0005000  0.0000000  0.0005000     500000.000
       0.0000000 -0.0005000 -0.0005000     500000.000
      -0.0005000 -0.0005000  0.0000000     500000.000
     RAMAN        :     0.29s CPU time


     Computing electric fields

     Non scf calculation
     for all points, including k+b

     Finished non-scf calculation

     Calculation of the non-linear susceptibility

     Computing atomic displacement perturbation
     Non scf calculation
     and calculation of the Raman tensor for each mode
     for all points, including k+b


     Representation #  1 modes #   1  2  3


     Representation #  2 modes #   4  5  6

     The part without the appearance of the position operator 
     will be written to file alas.ram.no_r                                                                                                                                                                                                                                                   

     The part with just the atomic position perturbed wavefunctions
     on the enlarged mesh
     will be written to file alas.ram.atom                                                                                                                                                                                                                                                   

     The part with just the electric field  perturbed wavefunctions
     on the enlarged mesh
     will be written to file alas.ram.elf                                                                                                                                                                                                                                                    

     The part with both perturbed wavefunctions
     on the enlarged mesh
     will be written to file alas.ram.both                                                                                                                                                                                                                                                   
     This will be used for the whole Raman tensor !!!
     THE RAMAN TENSOR WILL BE WRITTEN ON FILE: alas.ram                                                                                                                                                                                                                                                        

     Finished this calculation
 
     RAMAN        : 29m 2.02s CPU time

     INITIALIZATION: 
     phq_setup    :     0.01s CPU
     phq_init     :     0.22s CPU
     ram_init     :     0.03s CPU
 
     NSCF ROUTINES:
     nscf_e       :    39.89s CPU
     nscf_u       :    49.36s CPU (       2 calls,  24.680 s avg)
 
     NONL. SUSCEPT.:
     pdvp_dpdp    :     0.01s CPU
     dpsidvdpsi   :     0.54s CPU
     sus_xc       :     0.27s CPU
     sus_findif   :   247.95s CPU
 
     RAMAN TENSOR:
     dpE_dvu_dpE  :     1.05s CPU (      60 calls,   0.017 s avg)
     dpE_dpu_dHE  :     0.02s CPU (       2 calls,   0.010 s avg)
     dpE_dpE_dHu  :     0.03s CPU (       2 calls,   0.015 s avg)
     dpE_dhE_dpu  :     1.88s CPU (       2 calls,   0.940 s avg)
     dpE_dHu_dpE  :     1.85s CPU (       2 calls,   0.925 s avg)
     ram_xc       :     0.37s CPU
     findif_el    :   481.17s CPU (       2 calls, 240.585 s avg)
     findif_at    :   413.35s CPU (       2 calls, 206.675 s avg)
     findif_both  :   505.02s CPU (       2 calls, 252.510 s avg)
