# This script should not be run directly; it is called by
# ./run_example

if [ -z "$LD1_COMMAND" ]; then
    echo "This script should not be run directly, it is called by ./run_example"
else

RNC=1.40
RNChard=1.20
RUSs=1.70
RUSp=1.70
Rd=1.40
REF=0.05

# RNC=1.40
# RNChard=1.10
# RUSs=1.50
# RUSp=1.60
# Rd=1.40
# REF=0.05


# parameters:
FUNC="PBE"      # density functional
NLCC="true"     # use nonlinear core correction?
RCORE="0.50"    # core radius for NLCC

PSEUDO_DIR="$EXAMPLE_DIR/pseudo"
mkdir -p "$PSEUDO_DIR"
$ECHO "    cleaning pseudopotential directory: \"$PSEUDO_DIR\"."
rm -rf "$PSEUDO_DIR/*" 
$ECHO "    using:"
$ECHO "      density functional:        $FUNC"
$ECHO "      nonlinear core correction: $NLCC"

### NC ###
$ECHO "    generating NC pseudopotential (NC2)"
name=NC2
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.UPF'
   zval=6.d0,
   lpaw=.false.
 /
5
2S  2  0  2.00  0.00  $RNC  $RNC
2S  2  0  0.00  $REF  $RNC  $RNC
2P  2  1  4.00  0.00  $RNC  $RNC
2P  2  1  0.00  $REF  $RNC  $RNC
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNC  $RNC  1
2P  2  1  4.00  0.00  $RNC  $RNC  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### NC hard ###
$ECHO "    generating NC hard pseudopotential (NC1)"
name=NC1
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.UPF'
   zval=6.d0,
   lpaw=.false.
 /
5
2S  2  0  2.00  0.00  $RNChard  $RNChard
2S  2  0  0.00  $REF  $RNChard  $RNChard
2P  2  1  4.00  0.00  $RNChard  $RNChard
2P  2  1  0.00  $REF  $RNChard  $RNChard
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 /
2
2S  1  0  2.00  0.00  $RNChard  $RNChard  1
2P  2  1  4.00  0.00  $RNChard  $RNChard  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### US ###
$ECHO "    generating US pseudopotential (US2)"
name=US2
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.UPF'
   zval=6.d0,
   lpaw=.false.
   file_qvan = '$PSEUDO_DIR/$name.qvan'
 /
5
2S  2  0  2.00  0.00  $RNC  $RUSs
2S  2  0  0.00  $REF  $RNC  $RUSs
2P  2  1  4.00  0.00  $RNC  $RUSp
2P  2  1  0.00  $REF  $RNC  $RUSp
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNC  $RUSs  1
2P  2  1  4.00  0.00  $RNC  $RUSp  1

EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### US with hard augmentation charges ###
$ECHO "    generating US pseudopotential with hard augmentation charge (US1)"
name=US1
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.UPF'
   zval=6.d0,
   lpaw=.false.
   file_qvan = '$PSEUDO_DIR/$name.qvan'
 /
5
2S  2  0  2.00  0.00  $RNChard  $RUSs
2S  2  0  0.00  $REF  $RNChard  $RUSs
2P  2  1  4.00  0.00  $RNChard  $RUSp
2P  2  1  0.00  $REF  $RNChard  $RUSp
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNChard  $RUSs  1
2P  2  1  4.00  0.00  $RNChard  $RUSp  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### PAW from NC hard with NChard augmentation functions ###
$ECHO "    generating PAW from NC hard with NC hard augmentation functions (PAW1)"
name=PAW1
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.PAW'
   zval=6.d0,
   lpaw=.true.
   lnc2paw=.true.
   rcutnc2paw(1)=$RNChard,
   rcutnc2paw(2)=$RNChard,
   rcutnc2paw(3)=$RNChard,
   rcutnc2paw(4)=$RNChard,
   rcutnc2paw(5)=$RNChard,
   which_paw_augfun ='AE'
   paw_rmatch_augfun=1.2
   file_qvan = '$PSEUDO_DIR/$name.qvan'
 /
5
2S  2  0  2.00  0.00  $RNC  $RUSs
2S  2  0  0.00  $REF  $RNC  $RUSs
2P  2  1  4.00  0.00  $RNC  $RUSp
2P  2  1  0.00  $REF  $RNC  $RUSp
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNC  $RUSs  1
2P  2  1  4.00  0.00  $RNC  $RUSp  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### PAW from NC hard with smoother NC augmentation functions (same radius as US calculation) ###
$ECHO "    generating PAW from NC hard with smoother NC augmentation functions (PAW2)"
name=PAW2
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.PAW'
   zval=6.d0,
   lpaw=.true.
   lnc2paw=.true.
   rcutnc2paw(1)=$RNChard,
   rcutnc2paw(2)=$RNChard,
   rcutnc2paw(3)=$RNChard,
   rcutnc2paw(4)=$RNChard,
   rcutnc2paw(5)=$RNChard,
   which_paw_augfun ='QVAN'
   paw_rmatch_augfun=1.2
   file_qvan = '$PSEUDO_DIR/$name.qvan'
 /
5
2S  2  0  2.00  0.00  $RNC  $RUSs
2S  2  0  0.00  $REF  $RNC  $RUSs
2P  2  1  4.00  0.00  $RNC  $RUSp
2P  2  1  0.00  $REF  $RNC  $RUSp
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNC  $RUSs  1
2P  2  1  4.00  0.00  $RNC  $RUSp  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### PAW from NC hard with gaussian augmentation functions ###
$ECHO "    generating PAW from NC hard with gaussian augmentation functions (PAW3)"
name=PAW3
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.PAW'
   zval=6.d0,
   lpaw=.true.
   lnc2paw=.true.
   rcutnc2paw(1)=$RNChard,
   rcutnc2paw(2)=$RNChard,
   rcutnc2paw(3)=$RNChard,
   rcutnc2paw(4)=$RNChard,
   rcutnc2paw(5)=$RNChard,
   which_paw_augfun ='GAUSS'
   paw_rmatch_augfun=1.2
   file_qvan = '$PSEUDO_DIR/$name.qvan'
 /
5
2S  2  0  2.00  0.00  $RNC  $RUSs
2S  2  0  0.00  $REF  $RNC  $RUSs
2P  2  1  4.00  0.00  $RNC  $RUSp
2P  2  1  0.00  $REF  $RNC  $RUSp
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNC  $RUSs  1
2P  2  1  4.00  0.00  $RNC  $RUSp  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

### PAW from NC hard with "Bessel" augmentation functions ###
$ECHO "    generating PAW from NC hard with \"Bessel\" augmentation functions (PAW4)"
name=PAW4
cat <<EOF > ./ld1.$name.gen.in
 &input
        title='O',
        zed=8.0,
        rel=0,
        beta=0.5,
        iswitch=3,
        dft='$FUNC',
        prefix='$PSEUDO_DIR/$name'
        nld=0
 /
4
1S  1  0  2.0  1
2S  2  0  2.0  1
2P  2  1  4.0  1
3D  3  2 -1.0  1
 &inputp
   pseudotype=3,
   nlcc=.$NLCC., rcore=$RCORE
   lloc=2,
   file_pseudopw='$PSEUDO_DIR/$name.PAW'
   zval=6.d0,
   lpaw=.true.
   lnc2paw=.true.
   rcutnc2paw(1)=$RNChard,
   rcutnc2paw(2)=$RNChard,
   rcutnc2paw(3)=$RNChard,
   rcutnc2paw(4)=$RNChard,
   rcutnc2paw(5)=$RNChard,
   which_paw_augfun ='BESSEL'
   paw_rmatch_augfun=1.2
   file_qvan = '$PSEUDO_DIR/$name.qvan'
 /
5
2S  2  0  2.00  0.00  $RNC  $RUSs
2S  2  0  0.00  $REF  $RNC  $RUSs
2P  2  1  4.00  0.00  $RNC  $RUSp
2P  2  1  0.00  $REF  $RNC  $RUSp
3D  3  2 -2.00  0.15  $Rd  $Rd
 &test
  nconf=1,
 / 
2
2S  1  0  2.00  0.00  $RNC  $RUSs  1
2P  2  1  4.00  0.00  $RNC  $RUSp  1
EOF
$LD1_COMMAND < ./ld1.$name.gen.in > ./ld1.$name.gen.out 

fi
