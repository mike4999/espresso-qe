#!/bin/sh

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example shows how to calculate interatomic force constants in"
$ECHO "real space for AlAs in zincblende structure."

# set the needed environment variables
. ../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x ph.x q2r.x matdyn.x"
PSEUDO_LIST="Al.vbc.UPF As.gon.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done
 
# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
PH_COMMAND="$PARA_PREFIX $BIN_DIR/ph.x $PARA_POSTFIX"
Q2R_COMMAND="$PARA_PREFIX $BIN_DIR/q2r.x $PARA_POSTFIX"
MATDYN_COMMAND="$PARA_PREFIX $BIN_DIR/matdyn.x $PARA_POSTFIX"
$ECHO
$ECHO "  running pw.x as:     $PW_COMMAND"
$ECHO "  running ph.x as:     $PH_COMMAND"
$ECHO "  running q2r.x as:    $Q2R_COMMAND"
$ECHO "  running matdyn.x as: $MATDYN_COMMAND"
$ECHO
 
# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"

# self-consistent calculation
cat > alas.scf.in << EOF
 &control
    calculation='scf'
    restart_mode='from_scratch',
    tstress = .true.
    tprnfor = .true.
    prefix='alas',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system    
    ibrav=  2, celldm(1) =10.50, nat=  2, ntyp= 2,
    ecutwfc =16.0
 /
 &electrons
    conv_thr =  1.0d-8
    mixing_beta = 0.7
 /
ATOMIC_SPECIES
 Al  26.98  Al.vbc.UPF
 As  74.92  As.gon.UPF
ATOMIC_POSITIONS
 Al 0.00 0.00 0.00 
 As 0.25 0.25 0.25 
K_POINTS
 2
 0.25 0.25 0.25 1.0
 0.25 0.25 0.75 3.0
EOF
$ECHO "  running the scf calculation...\c"
$PW_COMMAND < alas.scf.in > alas.scf.out
$ECHO " done"

# phonons
cat > alas.phG.in << EOF
phonons of AlAs at Gamma
 &inputph
  tr2_ph=1.0d-12,
  prefix='alas',
  epsil=.true.,
  amass(1)=26.98,
  amass(2)=74.92,
  outdir='$TMP_DIR/',
  fildyn='alas.dynG',
 /
0.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation at Gamma...\c"
$PH_COMMAND < alas.phG.in > alas.phG.out
$ECHO " done"

# These are k-points of a (444) uniform grid in the irreducible
# Brillouin Zone of the fcc lattice (Gamma is treated separately)
/bin/rm alas.nscf.out alas.ph.out

qpoints="-0.25,-.25,0.25\
         -0.50,-.50,0.50\
          0.00,0.00,0.50\
         -0.25,-.25,0.75\
         -0.50,-.50,1.00\
          0.00,0.00,1.00\
         -0.50,0.00,1.00"

for qpoint in $qpoints ; do

# non self-consistent calculation 
qx=`$ECHO $qpoint | cut -d, -f1`
qy=`$ECHO $qpoint | cut -d, -f2`
qz=`$ECHO $qpoint | cut -d, -f3`
cat > alas.nscf.in << EOF
 &control
    calculation='phonon'
    restart_mode='from_scratch',
    prefix='alas',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system    
    ibrav=  2, celldm(1) =10.50, nat=  2, ntyp= 2,
    ecutwfc =16.0
 /
 &electrons
    conv_thr =  1.0d-8
 /
 &phonon
    xqq(1) = $qx, xqq(2) = $qy, xqq(3) = $qz
 /
ATOMIC_SPECIES
 Al  26.98  Al.vbc.UPF
 As  74.92  As.gon.UPF
ATOMIC_POSITIONS
 Al 0.00 0.00 0.00 
 As 0.25 0.25 0.25 
K_POINTS
 2
 0.25 0.25 0.25 1.0
 0.25 0.25 0.75 3.0
EOF

$ECHO "  running the nscf calculation at q=$qpoint...\c"
$PW_COMMAND < alas.nscf.in >> alas.nscf.out
$ECHO " done"

# the following line prevents the appearence of a bug with PGI compiler
if test -f $TMP_DIR/alas.bar ; then /bin/rm $TMP_DIR/alas.bar ; fi

# phonon calculation
cat > alas.ph.in << EOF
phonons of AlAs at $qpoint
 &inputph
  tr2_ph=1.0d-12,
  prefix='alas',
  amass(1)=26.98,
  amass(2)=74.92,
  outdir='$TMP_DIR/',
  fildyn='dyn.$qpoint'
 /
$qpoint
EOF
$ECHO "  running the phonon calculation at q=$qpoint...\c"
$PH_COMMAND < alas.ph.in >> alas.ph.out
$ECHO " done"

done

cat > q2r.in <<EOF
 &input
   nr1=4,nr2=4, nr3=4, zasr=.true., fild='alas444.fc'
 /
8
alas.dynG
dyn.-0.25,-.25,0.25
dyn.-0.50,-.50,0.50
dyn.0.00,0.00,0.50
dyn.-0.25,-.25,0.75
dyn.-0.50,-.50,1.00
dyn.-0.50,0.00,1.00
dyn.0.00,0.00,1.00
EOF

$ECHO "  transforming C(q) => C(R)...\c"
$Q2R_COMMAND < q2r.in > q2r.out
$ECHO " done"

cat > matdyn.in <<EOF
 &input
    asr=.true.,  amass(1)=26.98, amass(2)=74.922, 
    flfrc='alas444.fc', flfrq='alas.freq'
 /
 9
  0.000 0.0 0.0  0.0 
  0.125 0.0 0.0  0.0  
  0.250 0.0 0.0  0.0  
  0.375 0.0 0.0  0.0  
  0.500 0.0 0.0  0.0  
  0.625 0.0 0.0  0.0  
  0.750 0.0 0.0  0.0  
  0.875 0.0 0.0  0.0  
  1.000 0.0 0.0  0.0  
EOF

$ECHO "  recalculating omega(q) from C(R)...\c"
$MATDYN_COMMAND < matdyn.in > matdyn.out
$ECHO " done"

$ECHO
$ECHO "$EXAMPLE_DIR: done"
