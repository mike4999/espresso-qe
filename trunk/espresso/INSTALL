Installation is a three-step procedure:

1) select the appropriate template for machine-dependent settings
     
2) edit the file "make.sys" to adapt to your local configuration
   (typically library location)

3) compile what you need

------------------------------------------------------------------------
First step : machine-dependent setting
------------------------------------------------------------------------

From the root directory (the one where this file is), give the command:

./configure "your-system"

"./configure" with no argument will yield a list of valid arguments.
Temporarily there are different installation files for PWscf, CPV, FPMD.

For PWscf, select one of the following as "your-system" :

ibmsp   : IBM SP2/3/4, IBM compiler
t3e     : Cray T3E, Cray compiler
origin  : SGI Origin 2000/3000, SGI compiler
sunmpi  : Sun parallel machines, Sun compiler
alphaMPI: Compaq alpha parallel machines, Compaq compiler
beowulf : Linux Beowulf (PC cluster), Portland compiler
beo_ifc : As above, Intel compiler
alpha   : Compaq alpha workstations, Compaq compiler
ibm     : IBM RS6000 workstations, IBM compiler
pc_abs  : Linux PCs, Absoft compiler
pc_pgi  : Linux PCs, Portland compiler
pc_ifc  : Linux PCs, Intel compiler
sun     : Sun workstations, Sun compiler
fujitsu : Fujitsu vector machines, Fujitsu compiler
hitachi : Hitachi SR8000

For CPV:

cpv.ibmsp   : IBM SP2/3/4, IBM compiler
cpv.t3e     : Cray T3E, Cray compiler
cpv.origin  : SGI Origin 2000/3000, SGI compiler
cpv.alphasc : Compaq alpha parallel machines, Compaq compiler
cpv.aix     : IBM RS6000 workstations, IBM compiler
cpv.alpha   : Compaq alpha workstations, Compaq compiler
cpv.irix    : SGI workstations running IRIX, SGI compiler
cpv.lnx.alpha  : Linux Alphas, Compaq compiler
cpv.qsw        : Linux Alpha QSW cluster, Compaq compiler
cpv.lnx.absoft : Linux PCs (also beowulf), Absoft compiler
cpv.lnx.pgi    : Linux PCs (also beowulf), Portland compiler
cpv.lnx.inteli : Linux PCs (alos beowulf), Intel compiler
cpv.sx5        : NEC SX-5

For FPMD: as above, with "cpv" replaced by "fpmd"

This will generate dependencies and produce a file "make.sys"
in the root directory. 

------------------------------------------------------------------------
Second step : adapt to local configuration
------------------------------------------------------------------------

Edit file "make.sys" and adapt it to your local configuration. 
In most cases you will need just to specify the name and location 
of libraries. If you have access to highly optimized libraries,
you may want to use them.

------------------------------------------------------------------------
Third step : compile
------------------------------------------------------------------------

make        gives a list of possible commands.

make pw     produces PW/pw.x (electronic and ionic optimization)
make ph     produces PH/ph.x (phonons)
make pp     produces PP/pp.x (postprocessing) and other codes
make d3     produces D3/d3.x (third-order energy derivatives)
make gamma  produces Gamma/pwg.x and Gamma/phcg.x
            (Gamma-only versions of pw,x and ph.x)
make upf    produces utilities for pseudopotential conversion in upftools/
make tools  produces miscellaneous tools for data analysis, in pwtools/
make fpmd   produces FPMD/par2.x code for Car-Parrinello MD
make cpv    produces CPV/cp.x code for CP MD with ultrasoft pseudopotentials

make links  creates links to all executables in bin/
            (required to run the examples)

PLEASE NOTE: if you change compilation or precompilation options after
the first compilation, give command "make clean" and recompile everything,
unless you now exactly which routines are affected by compilation or 
precompilation options and how to force their recompilation.
------------------------------------------------------------------------

More details on installation of PWscf can be found in the "Installation" 
section of the PWscf manual, on-line at http://www.pwscf.org
