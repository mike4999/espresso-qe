# System-dependent definitions for IBM AIX (RISC6000) workstations
# Edit according to your needs

.SUFFIXES :
.SUFFIXES : .o .c .f .f90

.f90.o:
	$(F90) $(F90FLAGS) -c $<

.f.o:
	$(F77) $(FFLAGS) -c $<

.c.o:
	$(CC) $(CFLAGS) -c $<

## If the mass library is available, use
# CPPFLAGS     = -D__AIX,-D__MASS,-DHAS_ZHEGVX

CPPFLAGS     = -D__AIX,-DHAS_ZHEGVX

# Fortran compiler:
# Use -g -C without -s in LDFLAGS for debugging
# Use -O            for optimization
# Use -O3 -qstrict  for higher optimization (may not go faster)
# Use -qarch=auto -qtune=auto for processor-specific optimization
# Older compilers may not recognize "auto". Specify for instance
#     -qarch=pwr2 -qtune=pwr2  (this would be for power2 cpus)
CC           = cc
MPICC        = cc
F90          = xlf
MPIF90       = xlf
F77          = $(F90)
MPIF77       = $(MPIF90)

FFLAGS       = -qalias=noaryovrlp -I../include \
               -O3 -qstrict -qarch=auto -qtune=auto -qsuffix=cpp=f90 \
               -qdpc -qalias=nointptr -Q
FFLAGS_NOOPT = -O0
F90FLAGS     = $(FFLAGS) -qfree=f90 -I../include -WF,$(CPPFLAGS) \
               -I../Modules -I../PW -I../PH
CFLAGS       = -I../include -Wp,$(CPPFLAGS) -O2

# We assume that essl is installed and that lapack is in /usr/local/lib
# NOTA BENE: essl must be loaded BEFORE lapack in order to load the correct
#            version of diagonalization routines
#            use esslp2 if available on power2 machines
LIBS         = -lessl  -L/usr/local/lib -llapack

# For Cineca machines:
# LIBS         = -lessl -L/cineca/lib/ -llapack \
#                -L/cineca/lib/mass -lmassvp4 -lmass

# use -bmaxdata:512000000 for jobs>256Mb (in this example up to 512Mb)
# use -bnso -bI:/usr/lib/syscalls.exp for static linking
# use -s for stripped executable (smaller file but no debugging)
LD           = $(MPIF90)

LDFLAGS      = ../flib/ptools.a ../flib/flib.a ../clib/clib.a -s
# LDFLAGS      = ../flib/ptools.a ../flib/flib.a ../clib/clib.a \
#                -s -bmaxdata:512000000

AR           = ar
ARFLAGS      = ruv
RANLIB       = echo
