#
# System-dependent definitions for t3e using MPI
# Edit according to your needs
#
# Precompiler
#
CPP = /opt/ctl/bin/cpp
#
# add -D__BENCHLIB to CPPFLAGS if the benchlib is installed

# Use fft routines from mathematical t3e libraries
# CPPFLAGS = -I$(OSHOME)/include/ -D__T3E -D__PARA -D__MPI

# Use precompiled fftw library (version <= 2.1.5, NOT v.3!)
#
# In this case, specify also how to load the fftw library (FFTW_LIB)
# and the path to the fftw.h include file (FFTW_INC_DIR). Example:
# FFTW_LIB=-L/usr/local/src/fftw-2.1.3/fftw/.libs -lfftw
# FFTW_INC_DIR=/usr/local/src/fftw-2.1.3/fftw
# CPPFLAGS = -D__T3E -D__PARA  -D__MPI -D__FFTW \
#  -I$(OSHOME)/include -I$(FFTW_INC_DIR)

# Use the local copy of fftw
#
CPPFLAGS = -D__T3E -D__PARA  -D__MPI -D__FFTW -D__USE_INTERNAL_FFTW\
 -I$(OSHOME)/include -I./
#
# Fortran compiler:
#
F90 = f90 
F77 = f90 
#
# you may need to add -Idir, where "dir"=directory where mpif.h resides
# with -M1110 flag compiler does not issue warning messages for 
# the use of DOUBLE PRECISION constants in the code. (SdG)
#
# More aggressive optimization flags: 
#   -O3 -O unroll2  -O pipeline3 -O aggress -O fusion -O bl
#
FFLAGS = -em -dp  -M1110
#
# Fortran90 compiler flags
#
F90FLAGS = $(FFLAGS) -F -eZ $(CPPFLAGS)
#
# Fortran77 compiler flags
F77FLAGS = $(FFLAGS) -eZ 
#
# C compiler flags
#
CCFLAGS  = $(CPPFLAGS) -O2
#
# This is needed to tell the compiler where modules are
#
MODULEFLAG= -p$(OSHOME)/Modules -p$(OSHOME)/PW -p$(OSHOME)/PH
#
# Loader:
#
# usually blas and lapack are automatically loaded
# and only fftw (if required) and mpi need to be specified
# if you use -D__BENCHLIB, load the benchlib as well :
#    -l _scalar -l _vect -l _ereg
#
LD=$(F90)
LIBS = $(FFTW_LIB) -lmpi
LDFLAGS = $(OSHOME)/flib/ptools.a $(OSHOME)/flib/flib.a  $(OSHOME)/clib/clib.a $(LIBS)
#
# this contains auxiliary routines missing in T3E lapack 
#
MYLIB = lapack_t3e
#
# ar:
#
AR = ar
ARFLAGS = ruv
