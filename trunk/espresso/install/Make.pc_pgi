#
# System-dependent Make definitions for Linux PCs, pgi compiler
# Edit according to your needs
#
# Precompiler
# we assume that the GNU precompiler is used. The option -traditional
# prevent string concatenation '//' from being interpreted as a comment
#
CPP = /lib/cpp -P -traditional
#
# Add -DADD_BLAS_ONE_UNDERSCORE if your blas/lapack library names contain 
# two underscores at the end

# Use precompiled fftw library (version <= 2.1.5, NOT v.3!)
#
# In this case, specify also  how to load the fftw library (FFTW_LIB)
# and the path to the fftw.h include file (FFTW_INC_DIR). Example:
# FFTW_LIB=-L/usr/local/src/fftw-2.1.3/fftw/.libs -lfftw
# FFTW_INC_DIR=/usr/local/src/fftw-2.1.3/fftw
# CPPFLAGS = -D__LINUX -D__PGI -D__FFTW -I$(OSHOME)/include \
#  -I$(FFTW_INC_DIR)

# Use the local copy of fftw

CPPFLAGS = -D__LINUX -D__PGI -D__FFTW -D__USE_INTERNAL_FFTW \
  -I$(OSHOME)/include -I./

#
# Fortran compilers:
# Please note: -r8 is necessary for numerical stability ..
#
F90 =pgf90
F77 =pgf77
F77FLAGS =  -fast -r8
F90FLAGS =  -fast -r8
#
# C compiler
#
CC = pgcc
CCFLAGS  =  -fast $(CPPFLAGS)

#
# This is needed to tell the compiler where modules are
#
MODULEFLAG= -I$(OSHOME)/Modules -I$(OSHOME)/PW -I$(OSHOME)/PH

#
# Loader:
# this below uses precompiled pgi libraries ( not very efficient but stable )
# 
LD=$(F90)
LIBS = -L/usr/local/pgi/linux86/lib/ -llapack -lblas $(FFTW_LIB)
#
# For CINECA machines use:
# LIBS = -L/usr/local/pgi/linux86/lib/ -llapack -L/cineca/lib/ATLAS \
#        -lf77blas -latlas $(FFTW_LIB)
#
LDFLAGS = $(OSHOME)/flib/ptools.a $(OSHOME)/flib/flib.a $(OSHOME)/clib/clib.a $(LIBS) $(MODULEFLAG)

#
# ar:
#
AR = ar
ARFLAGS = ruv
RANLIB         = echo
