TODO LIST - May 2006

BUGS TO EXAMINE

- Zr pp buggy?
- strange empty states with C blyp ?
- O pseudopotentials?

INSTALLATION/PORTING

- replacement for FFTW on Intel/AMD

COMMON

- cleanup of the scratch directory mess: 
  outdir, tmp_dir, wfc_dir, scradir...

- pseudopotentials: support new format (XML) if/when ready

- adding/removing/modifying input variables is too complex

- time steps in fs (both in input and in output)

- fix shift in eigenvalues between CP/FPMD and PW
  The eigenvalues should be the same
  Total energies for charged systems should also be the same

- merge spherical harmonics between CP-PW and FPMD
  merge integration routines, random number generators

- error is in flib/ but requires modules: not a good solution,
  things in flib/ should not use modules except maybe kinds 
  and other very low level modules 

- replace calls to level-1 blas copy, scal, axpy, with f90 syntax

- cleanup and merge of routines reading and processing PPs;
  merge uspp-related stuff ("small box") of CP into PW

PW

- add possibility to read atomic positions from file

- Use more standard choices for crystal axis

- fix problem with j'_l(x)Y_lm(x) for x -> 0 and l=1

- make hpsi/spsi/newd/addusdens/CG/DIIS  faster
  - remove complex factor i**l from beta fct and q(r) (preliminary)
  - shift structure factor from beta to psi when computing becp (reduce memory)
  - use real BLAS routine instead of COMPLEX one in hpsi/spsi 
    (at least 2 times faster).
  - use only half of the G's when computing real integrals (2 times faster)
  - seek for CG and DIIS algoritms that only use (H-eS)|psi> and not
    the two vector separately ... compute it in one single call. (this way
    S|psi> is  inexpensive)
  - disable DIIS until it really works (if ever)

- output should be more informative and less confused
  the printout with UPF PP is incomplete or misleading (lloc=0)

- write explicitly and unambiguosly the units of output quantities
  and also what are exactly the output quantites!

- some symmetry-related routines such as sgama are too complex

Low priority:

- add traceback in error (error_handler module)

POSTPROCESSING

- complete postprocessing in Gamma case (only average missing),
  and with CP/FPMD data

- stm_wfc_matching not working

- the dynamical matrix written by the phonon code does not contain
  the information on lattice basis vectors if ibrav=0.
  As a consequence most postprocessing codes will not work.
  The file format should be reconsidered: XML ?

PH, D3, Gamma

- use charge mixing instead of potential mixing

- move all phonon-specific stuff (symmetry etc) from pw into phonon
  clean up the logic overall: there shouldn't be any longer the
  present confusion on what symmetries are we dealing with. We should
  either keep unchanged the crystal symmetries and use indices to
  locate symmetries of the small group of q, or keep different copies 
  for the symmetries of the crystal and of the small group of q

- same input for Gamma and PH

- replace "use pwcom" into more "use" statements

DOCUMENTATION

- better documentation for file format

- single source (xml?) for text file, GUI help file, user guide
  (Tone?)

- tests/examples for some features (e.g. variable cell, many kinds
  of postprocessings) are still missing

- better automated testing procedure, quick and distinct from examples!

- add some benchmarks

- expand and update the manual; add a list of FAQ, or of already
  answered questions

- complete the developer's (technical) guide

CP/FPMD:

- CP: check on small box size

- Documentation needs serious improvements

- Proposals from Princeton:
  * just one name for CP and FPMD
  * default set up for molecular calculations
  * default cutoff values as well as radii of augmented charge
    from pseudopotential files
  * default choice for spin restricted and spin unrestricted configurations
    for neutral systems (maybe already there?)
  * automatic FFT grids from cutoff
  * automatic box grid for USPP from radii of augmented charge
  * default values for emass(emass=300), for dt (dt=7), for preconditioning
    cutoff (3)
  * the code should consider a common error:
      dt^2/emass too large does not allow ortho to converge
      or cause energy to increase as time step evolve
  * Electronic minimization: SD should be discouraged: use damp as default,
    introduce an automatic default schedule, something as:
    1st step sd followed by 5 steps with with damp= 0.8,
                followed by 5 steps with damp=0.5,
                followed by 10 steps with damp=0.3,
                followed by 10 steps with damp=0.2,
                followed by as many steps as necessary
                to achieve the required convergence with damp=0.1
   A max number of steps should be included to ensure program termination
   The other option allowed should be conjugate gradients: 
   see Nicola - eventually it could become the default
  * Ionic minimization: again SD should be discouraged
    A default scheme for simultaneous damped dynamics should be given
    (to be tested) for example: zero damp on ions and start with damp=0.5
    on electrons to become then 0.1 or perhaps the values should be set
    given the forces on the ions
    When moving ions and electrons simultaneously an important parameter
    is the ratio between electron and ion masses - For minimization it 
    is better to set up all the ion masses equal - A default value for
    the ion masses (considering the defaults for emass and dt) is perhaps
    10 AMU (we should do some test to see if 20 AMU is s a safer value)
  * Default values for randomization should be given
    amprp=0.1 is a decent value - amprp=0.01 is too small
  * Car-Parrinello dynamics: the proper masses for the ions, an optimal value
    for emass and dt should be set up by the code, based on the smaller atomic
    mass and the default value used in the minimizationi
    e.g. Amass_default=10 AMU. If the minimum physical AMASS is 20 then
    dt=sqrt(2) dt_default and emass should be increased so to keep
    emass^2/dt constant
  * defaults for the Nose thermostat

